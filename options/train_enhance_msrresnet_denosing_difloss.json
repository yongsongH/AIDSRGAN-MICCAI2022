{
  "task": "train_enhance_msrresnet_denosing_add_deloss_finetuning_deloss+dif_sr_loss_RCABlock_0207" //
  , "model": "gan" // "gan"
  , "gpu_ids": [0,1]

  , "scale": 4      // broadcast to "netG" if SISR
  , "n_channels": 3  // broadcast to "datasets", 1 for grayscale, 3 for color
  , "sigma": [0, 50] // 15, 25, 50 for DnCNN | [0, 75] for FDnCNN and FFDNet
  , "sigma_test": 0  // 15, 25, 50 for DnCNN, FDnCNN and FFDNet, 0 for SR

  , "merge_bn": true              // if no BN exists, set false
  , "merge_bn_startpoint": 400000  // merge BN after N iterations

  , "path": {
    "root": "superresolution"  // "denoising" | "superresolution"
    , "pretrained_netG": null // path of pretrained model
    , "pretrained_netD": null  // path of pretrained model
  }

  , "datasets": {
    "train": { //train_rcablock/
      "name": "train_dataset"           // just name
      , "dataset_type": "deloss"          // "deloss" |"dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch"
      , "dataroot_H": "trainsets/train_rcablock/new train medical image_hr"// path of H training dataset//DIV2K_sub/G//IR100_sub_1500/HR
      , "dataroot_L": "trainsets/train_rcablock/new train medical image_real_lr+noise+compose2_v2"              // path of L training dataset
      , "dataroot_LHR": "trainsets/train_rcablock/new train medical image_lr"              // path of L_HR training dataset
      , "H_size": 96                    // patch size 40 | 64 | 96 | 128 | 192
      , "dataloader_shuffle": true
      , "dataloader_num_workers": 0    // win->0 | recomment 8
      , "dataloader_batch_size": 32    // batch size 1 | 16 | 32 | 48 | 64 | 128
    }
    , "test": { //test_rcablock/
      "name": "test_dataset"            // just name
      , "dataset_type": "deloss"           // "deloss"| "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch"
      , "dataroot_H": "testsets/test_rcablock/new test medical image_hr"   // path of H testing dataset
      , "dataroot_L": "testsets/test_rcablock/new test medical image_real_lr+noise+compose2_v2"             // path of L testing dataset
      , "dataroot_LHR": "testsets/test_rcablock/new test medical image_lr"

    }
  }

  , "netG": {
    "en_net_denosing_type": "D_add_deloss_denosing_RCABlock_msrresnet0" //D_add_deloss_denosing_msrresnet0|D_add_deloss_denosing_semsrresnet0 RCAGroup|D_add_deloss_denosing_RCABlock_msrresnet0 | D_add_deloss_denosing_RCABlock_Dropout_msrresnet0
  ,  "net_type": null  // "dncnn" | "fdncnn" | "ffdnet" | "srmd" | "dpsr" | "msrresnet0" |  "msrresnet1" | "rrdb"
  ,  "en_net_type":null //"D_msrresnet0"
  ,  "enhance": null //"enhance" | "no_enhance"
    , "in_nc": 3        // input channel number
    , "out_nc": 3       // ouput channel number
    , "nc": 64          // 96 for DPSR, 128 for SRMD, 64 for DnCNN and MSRResNet
    , "nb": 16          // 12 for "srmd", 15 for "ffdnet", 20 for "dncnn", 16 for "srresnet" and "dpsr"
    , "gc": 32          // unused
    , "ng": 2           // unused
    , "reduction" : 16  // unused
    , "act_mode": "R"   // "BR" for BN+ReLU | "R" for ReLU
    , "upsample_mode": "upconv"         // "pixelshuffle" | "convtranspose" | "upconv"
    , "downsample_mode": "strideconv"   // "strideconv" | "avgpool" | "maxpool"

    , "init_type": "orthogonal"         // "orthogonal" | "normal" | "uniform" | "xavier_normal" | "xavier_uniform" | "kaiming_normal" | "kaiming_uniform"
    , "init_bn_type": "uniform"         // "uniform" | "constant"
    , "init_gain": 0.2
  }

  , "netD": {
    "net_type": "discriminator_vgg_96" // 92 "discriminator_vgg_192" | "discriminator_vgg_128" | "discriminator_vgg_96"
    , "in_nc": 3
    , "act_mode": "BL"                 // "BL" means BN+LeakyReLU
    , "base_nc": 64

    , "init_type": "orthogonal" // "orthogonal" | "normal" | "uniform" | "xavier_normal" | "xavier_uniform" | "kaiming_normal" | "kaiming_uniform"
    , "init_bn_type": "uniform" // "uniform" | "constant"
    , "init_gain": 0.2
  }

  , "train": {
    "G_lossfn_type": "ssim"    // "l1" | "l2" | "l2sum" | "l1c" | "ssim"
  , "G_denoisingloss_type": "ssim"    // "l1" | "l2" | "l2sum" | "l1c" | "ssim"
    , "G_lossfn_weight": 1e-5 // fix !!!
  , "G_srlossfn_weight": 1e-5 // sr loss weight
   , "G_delossfn_weight": 0 // de loss weight

    , "F_lossfn_type": "l1"  // "l1" | "l2"
    , "F_lossfn_weight": 1

    , "gan_type": "ragan"    // "gan" | "ragan"
    , "D_lossfn_weight": 5e-3

    , "D_init_iters": 0

    , "G_optimizer_type": "adam"
    , "G_optimizer_lr": 1e-4
    , "G_optimizer_wd": 0

    , "D_optimizer_type": "adam"
    , "D_optimizer_lr": 1e-4
    , "D_optimizer_wd": 0

    , "G_scheduler_type": "MultiStepLR"
    , "G_scheduler_milestones": [100000, 200000, 1200000, 2000000]
    , "G_scheduler_gamma": 0.5

    , "D_scheduler_type": "MultiStepLR"
    , "D_scheduler_milestones": [100000, 200000, 1200000, 2000000]
    , "D_scheduler_gamma": 0.5

    , "checkpoint_test": 5000 //5000 //4050000
    , "checkpoint_save": 5000 //5000 //4050000
    , "checkpoint_print": 500 //405000 //win-> num_worker->0 | recomment 500
  }
}